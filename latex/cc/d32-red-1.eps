%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - cc.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 13:38:37 10/23/03
%%For: (leboudec)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 142 163 669 424
%%HiResBoundingBox: 142.022049 162.766846 668.620682 424.470413
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1210 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:783ce4ee-7c56-424a-aa70-76b5a17717b7' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:783ce4ee-7c56-424a-aa70-76b5a17717b7' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2003-10-23T13:37:58+02:00' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2003-10-23T13:37:58+02:00'></rdf:Description>
<rdf:Description rdf:about='uuid:783ce4ee-7c56-424a-aa70-76b5a17717b7' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:bab6e40c-24e5-489b-9b29-ef020dda6a7d'/>
<rdf:Description rdf:about='uuid:783ce4ee-7c56-424a-aa70-76b5a17717b7' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - cc.ppt</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>leboudec</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
142 163 527 262 rectclip
[ 0 -1 1 0 -20.7448 566.49246 ] concat
142.022049 162.766846 261.703568 526.598633 re
W
n
n
27.48 61.011002 539.999981 719.999985 re
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E1 exch /ColorSpace defineRes

cs 1.0 1.0 1.0 sc
f
1 J
1 j
0.72 w
n
345.23999 216.111008 m
345.23999 616.791016 l
0.0 0.0 0.0 sc
S
n
349.200012 616.671021 m
345.23999 624.531006 l
341.339996 616.671021 l
eofill
n
362.339996 241.731018 m
177.600006 241.731018 l
S
n
177.779999 245.69101 m
169.919998 241.731018 l
177.779999 237.831009 l
eofill
0 J
3.0 w
n
346.200012 241.371017 m
346.200012 303.891022 l
312.47998 432.891022 l
219.119995 432.891022 l
219.119995 562.911011 l
S
1 J
0.72 w
n
219.119995 234.771011 m
219.119995 246.891006 l
313.380005 235.491013 m
313.380005 247.611008 l
351.959991 305.871002 m
339.839996 305.871002 l
351.359985 435.111023 m
339.23999 435.111023 l
S
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT Initial
ct_T42Dict begin
-0.043 -0.707 0.699 1.219
 256 array 0 1 255 {1 index exch /.notdef put} for  /MFPACC+CourierNewPS-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320e593303000000cc000000566376
742098e97ad100000124000007ec6670676db479438900000910000007ab
676c79660360a92d0000495800001d3268656164c57c48c1000010bc0000
0036686865610bea019a000010f400000024686d74786908467600001118
00000a526c6f6361008d7f3400001b6c0000149c6d6178700d6614eb0000
3008000000206e616d658d82f57900003028000005e670726570de88b4d7
000036100000134667646972000000000000000000000000000104cd02bc
00050000059a05330000011d059a05330000036100660212050502070609
02020502040400007a878000000000000008000000004d6f6e6f00200020
fffc0511fe54000006a90267400001ffffff00008e3d04e700000492001b
04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e000004e70015fefd
000002d7000000cd000000cd0000000000000000006600cd012700cd00cd
00cd009600aa00cd005900cd008700870186011900cd00cd009300a900cd
007a008400940001000f007f0003002f015800ac002900cd00d9002b0056
0097009700f900cd001200c6007f00cdfff1004200d300540001000f0028
00c60097004200c4017d021d021f000200cd042500d301ff04eb011203a5
0076017f01f3035f0084009700cd00fe02bfff4900520085009c082cffae
00260040006d007c0091009d010f0122ff6effd90006001600290045ffa5
ffc80061006d00b100b801ad0350047dff9f00520053006e009200b4012e
046004c9fde3fe83ff6fffd2000c008900a6010b012102000200052aff57
001c0038003f005c00cb00cd00cd00cd01200429fdfffeddffb10006002b
00410052007f0091009100c200d000f1014401d304260500fe01ff1fffcb
ffda0007003e005c00950103010301100122014601ab021703cf03fa0005
001800470052005c00650067006f007200a700a700ac00b100ef01340135
01440244025d0288029502c30393047d047efefd007f00bb01000104012a
0140014b015301ab01d201d2021d0279037dfe0000060020002900430045
004c005d006d008f009600c800cd00cd00d900fd010101030166016f017d
019b01a001cd01e102c40354044804ebff66ff8400020002001200160021
0027003d00450054005900ae00b300b900cd00e10104011901220133013f
01440182024c027603340350035b037c039003a503d4045704aefe34feee
ff85ffa1ffbcffd6ffdbffed000200110022002d004b005300540058007b
0084009100a200ae00c100d700f201230142016e0182019401a201ad01ae
01bc01d601fe020d02ab0336039303b604010440049504c6fe11fea3feb8
feefff45ff59fffc0029006200830088009300a300a600a900b400c100df
0147014c0151015a0160016e0186018901a701c301ec0204025c02b50326
0371037a037b039503f50425047a04d50576fe5dfe93feb9ff30ff73ff85
ff88ffea0002000f00190037004a0054005e0069006e007000760078007b
007c007f00820084008500850085008d009100ad00b400b700bb00cd00e0
00ec00f50109010d010e011d013001300138013e014201580174018c0199
01a401e201e701f702010204022b0236024e0267028802a102c402d302e1
035403ac03bc03d303d30416044d0455046004a704ae05000511063d08cc
fbd9fcaffd98fd9afe02fe29fe5dff07ff1bff1cff47ffafffc3ffd9ffee
001e0020002c0038004e0056007c009000ac00b800b900cb00d000d000d9
00e500e700ef01050110011101240126014d015c0181018201860194019c
01a301a301a901ab01af01b801b801bc01bc01c001c501d001d601d701e0
01e501fb01fe01ff0226022f0236025c0266027b02a802bd02c302fe030b
031b03230326033c03650371037d038703a603ac03d203f103f7040e0413
0426043b0465049204ab04c104d904fb0547054d05770611068c068f00cd
00cd00cd00cd000000000000000000000000014502340266020201590001
000c007000b502c6022d005200cd00cd00cd00cd00cd00cd00cd00cd00cd
00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd
00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd
00cd00cd00cd008901f700c8014200e501fd001600890089008100e8012a
0157024301e600a600a20137019201a102030265008901c000a000a103ac
01d60283008c003f002e00eb003f00010268012e0188021c0066009102b3
00e3008200cd002700f1024700e300cd01f7021800cd03cd017000f801f2
018d00ef005200600215006701d2003801880144006c02290023007401cd
006e0000000005400401055b00000267000004e7049502ea029501ef0047
029f00cd00cd008c016100a0012900b400cd015b00af02df043604bd0037
00460021001a04950252020601790084009c020400a702c6005400b10058
004e00a90097005900a000830041003f0028007400430151000101f70109
001101890002005e00220089014400ab00ab01fd03fe00cd0046ffba0046
ffba00e80230008500950098000000b9002400aaff8e00be0162002d00b4
010a009c00e1004c03f404150000fff0041d0545ff02fe6200d8ff5100ca
0135011003de004800db018b00b3004800da0116009bff6cff3400e700cd
ff5900840084006800550541051e00610061026c00c107a006de063c0631
0601057a05640552054b054305370531052905210519050f050a04ef04dd
04d004be04a40482047a042e0415040c03de03cf03b10399038b036f034d
033f032e0326031d030402f902ee02e902dc02d802c002a9027f01b00000
ffdbffc8ff99ff50ff3dff37ff13fefefef5fec3feaefe9bfe95fe8efe80
fe70fe60fdc4fcddfcd3fcb1fca501f6fdd8ffa1ffc101cafefb00a60175
ff5aff4cfff6ffd9ff14ff93ff3dfed7018f0135012500fd00e500cc00c8
009300b400a400740058004b00400248011000fe00f500ed00e100d600cc
00b900a800890077006000560654004f006e002600d9008300cd00cd00cd
0065001200a70083000300a90012005c003f0095004c0022005c00020103
0127012700c400acffa10355008900b10000000000a702cf0120fea30027
0130016e010b014b00e3013e00ea00ea00b400b4fd9a00a800a806a700b9
00b906a900f5069d03fb404b57565554535251504f4e4a493f3e3d3c3b3a
3938373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b
1a191817161514131211100f0e0d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b0042651582320b00d44235921212d2c20204518684420
b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b
4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d
2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b21
21592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b0
0643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c
642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b011
2bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4
5959182d2c2d2cb0022546608a46b040618c482d2c01182f2d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b23
5961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c
0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b0
0943608a103a1b212121592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a
2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802cd23701020b8
02cd4520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c
21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051
580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000
626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f101613
4568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b5458
20458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b
2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b8
07085158b00425b00425012046b01060482046b0106048590a21211b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b53
234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c
4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b54
5a8a8a0ab012435c5a58381b2121592d2cb04e2bb00c25b00925b00525b0
0d25b00e25b00925b01325b2160e552b20b00e60252320b00f60252320b0
0f602523b00f602501105558d41b2159205820b0542a5921213c18f02ff0
3cb0502b2d2cb00b25b00325b00b25b00525b00e25b00f25b00e25b00d25
b00925b01525b017251801103cfc3c393d2f18e0f0b00b25b00a25b00c25
b00f25b00c25b00825b01025b01125b00c25b01625b21911552b20b01160
252320b01260252320b012602523b012602500105558d41b2159205820b0
542a5921213cf02ff03c103c3cb0502b2d2cb00b25b00325b00b25b00525
b00e25b00f25b00e25b00d25b00925b00f25b00f25b01725b01925180010
3c08fc003c393d2f18e0f02d2cb00225b001b00425b004255058601b6159
20b00325b00325b005255558b0062b1b2121592121212d2cb00c25b00925
b00e25b00b25b01025b01025b00f25b00f25b0544b5258b04f2bb04f2b52
582359811b21212121212121215921212121212121212121212121212d2c
b003260110493b2d2c23b003260010493b2d2c2026232026232d2c234b54
58202060b00160258a381b232159b8ffff602d2cb00160252320b0026025
20582020608a60b0026023b0532ab8ffff6026201b23b0026026592060b0
03602d2c462346608a8a462320468a608a61b8ff8062232010238ab90316
03168a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b202020243604259b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b2021002436042595959592d3d000100000002
e66633e5b5875f0f3cf50809080000000000a3556f4100000000b5c9aa05
ffa1fa51059d09c5000000090001000100005c3d0001000006a9fd990000
04cdffa1ff30059d00010000000000000000000000000000000304cd0067
0000000004cd0000000001bc0108007a00a6009e00e101e1021d00f200a6
005201a100bc01cf00a900a800a9006e00870099008400d8009800a900d7
01cd0194ffe60029005400d200b4ffd2001b0040001d001e00640041002d
00a8006e001b0044ffdafff00029007a0028001d007f00520016ffd1ffea
0016002b009701fe00aa00fd00a7ffaf01a40059ffeb0072003e00420095
0042001a008000b000450081ffde00330056ffef0048006c00970094001e
0000fffc002b002b00b1015802010151007dffd2ffd20040001efff00029
001600590059005900590059005900720042004200420042008000800080
0080003300560056005600560056001e001e001e001e00bd012700aa003e
00630135007d0019fffafffaffab01a401240029ffd50016005b0052ffe6
0054002b001d005e00430018004900070111010f0022ffd5002e00a801bc
ffd900890077007d0045004700680066ffd2ffd20029ffd6ffd60052ffc3
00a200d001fe01280052009b002b002b009c00000110017affdaffd800be
01cd012800d00028ffd2001effd2001e001e00a800a800a800a800290029
00290016001600160080011f010c0122012301e501a20199012101ae011f
00440080007f0097009700b10201ffdc005b002b002b007affef005200cc
015301310140ffa10002000000640041004200a8007f0097004000720040
0072003effaf02c4ffd20059ffd20059001d003effdc001e0042001e0042
004400810044008100440081fff00033fff0003300290056001d006c001d
006c007f009700520094005200940016001e0016001e009700b1009700b1
003e0028004f0051009800d1007600bf005affaf009b011200020002017d
0002017d0002017d017d0002006e0029005bffd9021e0101fff1021d021d
fff1021dfff1021dfff1fff1fff1fff1fff1017d021d017d017dfff1fff1
fff1021d017d017dfff1fff1fff1021d017d017dfff1fff1fff1fff1fff1
fff1fff1fff1fff1fff1fff1fff1fff1fff1fff1fff10267005afff1fff1
00020002000f0002000f000200ae007c0026fffafffa0002014100b80080
0002006c009f010f005a000cffd7ffd7020b0137009e00c80002012c012c
00ae0135ffd200590040007200400072001e0042001e0042001e00420041
00420041004200410042002d001a002d000b00a8008000a8008000a80080
00a80080006e00b0001b0045003100440081fff000330018004e00290056
00290056001d006c007f00970052007c0016001e0016001e0016001e0016
001effeafffc002b002b0095ffd20059ffd5ffd50016002e01cdffeafffc
ffeafffcffeafffc002b002b01fe00e60042005affd1ffeeffecfff801f7
01ab019f00d3ffd1fffdfffdfffdfffdfffdfffd00c0ffd2001b000c001e
0097002d00a8001bffd5ffdafff0006900290028007a00490052002b0016
fff9001c00a30026005100d1007201c8004d00e7002a01360072008c01c8
007d0030001d00430120005600ab00a9004d0040004700600103004d0051
004d0060001effff00440040007f00a800a8006e0002ffde000a0052000b
0027ffd2001b001b00440028001e0009fff6fffafffa00520005ffda002d
0029002d007a00400052000b002c0016000c0022ffeaffd3ffe0ffd8001b
0045ffdcffd40059006c001b004400450042000d00470011001100610008
0003002d00560027ffef00720052002a005e002b000c0040ffeaffd3000c
fffa001b0042ffe300340042001a0044007200970080008000b0fff7ffdc
001a0061002a0027004400440025001d00590225014a01490149022401b7
01b7019801980224014b02240236006001980200039000b901cc0090005d
00d200520082013a00ff004d00210137005300740094002c004c011800ca
0015008500be00c3008c007300830068006900710054003d003d019900d1
003a009e00530053ffc0ffc000850069006900690069009000900090005d
00d200520082013a00ff00210137005300740094004c00ca001500b400b9
00730083006800690071013a005d007400c300640243018c0160012401be
01be00a701be000001d3016801d301d3018501d3018f01d5019f01480110
00ce0148011f00eb00d200d200ea007501be00a8023401c201cd011b00f1
00e2010c00000000000000000000018f01f001f001f001c101c001b10155
013600000185016a0149000a000000000000000500000000000000de00a3
0000000000880066000000000000000000030000000000000037003d00a9
006800a900a90067006700ad00ad00ac00f9005a005a00a9006800a90068
017c018f018f0163018f0000000000030003000000000003002b0003002b
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000019a01a7021d00f20000000001be011b00e1
0187017900c700cb019d01cb0037003d0000000001e001cb000a00000000
0000016e013b000a000000000000000a00000000000000de00a000000000
00de00a00000000000de00a0000000000175012501750125008800660088
006600000000000000000000000000000000000300030000000000030003
000000000000000000000000000000000000000000af00db0000000000af
00db000000000005000000000000006d008f000000000008000800000000
008a002600000000015a015a00000000008000560000000001cd013b0000
000000c700cb0037003d0037006100000000003d0043006d007f006d0098
006d009801eb01c201d301d300590077018501d5018f011b023401850168
0076001b0000018f018f018f018f0163017c018c016f016f006d006d01d4
01c101c100890088017301c3017d01090222017301560079001bfffc017d
017d017d017d0151016a018c016f016f0098009800b400c500c5016d016d
007700c70081000d01280077005a0178011f00fd00810081008100810055
006e010a00ed00ed019d019d012000fb01500000000a0000000000000005
00000000000000a90068006700000000000300000000014f014f015d00ff
00df01cb01cb00910000002900560016001e0190015e0190019a019a0190
0168019001860190012b0113012c015e015e037700b4ffa1ffa1018e01ac
01680190016a016a010d010d012b00f8011600f801e701e701e701e701e7
0190019000f801e701e701e701e701e701e701e701e701e701e7014f0117
014f012bffd20059ffd20059ffd20059ffd20059ffd20059ffd20059ffd2
0059ffd20059ffd20059ffd20059ffd20059ffd20059001e0042001e0042
001e0042001e0042001e0042001e0042001e0042001e004200a8008000a8
008000290056002900560029005600290056002900560029005600290056
00290056002900560029005600290056002900560016001e0016001e0016
001e0016001e0016001e0016001e0016001e002b002b002b002b002b002b
ffd2005900a80080002900560016001e0016001e0016001e0016001e0016
001e011000de00d400de004400440009000d0052006100520061002d002d
002b002b002b002b0016002b00220040002d0033003f004200290056353f
000000000000006400000064000000640000006400000064000000640000
006400000064000000640000006400000064000000640000006400000064
00000064000000640000009a0000009a0000009a0000009a0000019c0000
019c0000019c0000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c0000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c0000019c0000019c0000019c0000019c0000019c0000019c
0000019c0000019c0000019c0000019c0000019c0000019c0000019c0000
019c0000019c000003760000037600000376000003760000058800000588
000007a40000093000000a4c00000a4c00000a4c00000a4c00000e640000
100e0000100e0000127c000014e6000016d6000016d60000180000001800
00001a1600001a1600001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200001d32
00001d3200001d3200001d3200001d3200001d3200001d3200001d320000
1d3200001d3200001d3200001d3200001d3200001d3200001d3200010000
05260100003f0072000500020010002f0058000007901346000300020000
000e00ae000000030000000000fe0000000000030000000700a600fe0001
000000000000007f01a40001000000000003001a02230001000000000004
001a023d0001000000000006001a02570001000000000007005302710003
00010409000000fe02c40003000104090001002603c20003000104090002
000e03e80003000104090003003403f600030001040900040034042a0003
0001040900060034045e000300010409000700a604920054007900700065
0066006100630065002000a900200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200070006c0063002e00200044006100740061002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002f00540079
0070006500200053006f006c007500740069006f006e007300200049006e
0063002e00200031003900390030002d0031003900390032002e00200041
006c006c0020005200690067006800740073002000520065007300650072
0076006500640043006f0075007200690065007221220020005400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c00630020007200650067006900730074
006500720065006400200069006e0020006300650072007400610069006e
00200063006f0075006e00740072006900650073002e5479706566616365
20a920546865204d6f6e6f7479706520436f72706f726174696f6e20706c
632e204461746120a920546865204d6f6e6f7479706520436f72706f7261
74696f6e20706c632f5479706520536f6c7574696f6e7320496e632e2031
3939302d313939322e20416c6c205269676874732052657365727665644d
46504143432b436f75726965724e657750532d426f6c644d544d46504143
432b436f75726965724e657750532d426f6c644d544d46504143432b436f
75726965724e657750532d426f6c644d54436f7572696572aa2054726164
656d61726b206f6620546865204d6f6e6f7479706520436f72706f726174
696f6e20706c63207265676973746572656420696e206365727461696e20
636f756e74726965732e00540079007000650066006100630065002000a9
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c0063002e
00200044006100740061002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002f005400790070006500200053006f006c
007500740069006f006e007300200049006e0063002e0020003100390039
0030002d0031003900390032002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064004d00460050
004100430043002b0043006f00750072006900650072004e006500770050
00530052006500670075006c00610072004d00460050004100430043002b
0043006f00750072006900650072004e0065007700500053002d0042006f
006c0064004d0054004d00460050004100430043002b0043006f00750072
006900650072004e0065007700500053002d0042006f006c0064004d0054
004d00460050004100430043002b0043006f00750072006900650072004e
0065007700500053002d0042006f006c0064004d00540043006f00750072
0069006500722122002000540072006100640065006d00610072006b0020
006f006600200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e00200070006c
00630020007200650067006900730074006500720065006400200069006e
0020006300650072007400610069006e00200063006f0075006e00740072
006900650073002ebb3eba0057ffc003f5b33a3c32d0411403f500010090
03f50001000f03f5002f03f5003f03f5004f03f5008f03f500af03f50006
004003f4b2090c32b9ffc003f4b2393a32410affc003f4003c0033ff8003
f400530033ffc003f4b35152321f411e03f4003f03f4004f03f4008003f4
00d003f40005002f03f4006003f4009003f400c003f40004000f03f4008f
03f4009f03f400ef03f40004ffc003f2b2363a32b9ffc003f2b24e543241
4effc003f200d40033ffc003f200d30033ffc003f200b60033ffc003f200
a20033ffc003f200860033ffc003f200850033ffc003f2006e0033ffc003
f200680033ffc003f200560033ffc003f200530033ffc003f2003e0033ff
c003f2003d0033ffc003f2003c0033ffc003f200320033ffc003f2003100
33ffc003f200250033ffc003f200220033ffc003f200200033ffc003f200
1f0033ffc003f1b2533390411e03f10001006003e9007003e9008003e900
03005003e9006003e9007003e9008003e9009003e900a003e900b003e900
c003e900d003e90009ffc003f0b2533390411b03f00001006003e8007003
e8008003e80003005003e8006003e8007003e8008003e8009003e800a003
e800b003e800c003e800d003e8b209122041400384003003840040038400
50038400040060039a0070039a0080039a0090039a00040000039a001003
9a0020039a0030039a0040039a0050039a0006000003d7001003d7000200
e003d300f003d30002000003d3001003d3002003d3003003d3004003d300
05002003d3003003d3004003d3000303c3025f0064001f03a4025db2641f
2f411e03b2003f03b2004f03b2000300e003d400f003d40002000003d400
1003d4002003d4003003d4004003d40005002003d4003003d4004003d400
03035ab203641fb803c2b243641fb803c1b321641f0f41310343001f0343
002f034300600343000400200342000100c0034200e003420002000f0342
002f034200400342006003420070034200050347032b0026001f033c0256
0035001f033b032b0035001f033a032c0035001f0339032c0035001f0338
032bb2351f0f41220330002f0330008f03300003000f0327002f0327008f
03270003000f0324002f0324008f03240003033003240024001f03270324
0033001f032403230024001fffc00320b2131932b9ffc00320b2212532b9
ffc00320b22e3232bd03210255003b001fffc00321b345473260410b031c
0070031c00020027031b00d7031b0002ffc0031bb2313232b9ffc0031bb2
464732b9ffc0031bb251533241110317026c0033001f031502f5001f001f
031402f50029001f031302f50029001f031fb21e421fb901410258b2641f
00411b030c0010030c0020030c0030030c0040030c0050030c0060030c00
70030c0080030c0090030c00a0030c00b0030c00c0030c00d0030cb30e12
1240b802c9b224339fba02c800ef02c84055022021019f05ef05029f04ef
04029f03ef03029f02ef0202bf06bf07021f063f065f066f068f06051f07
3f075f076f078f07053f023f034f024f0304201e20222027202c20470510
1e102110221027102c1047065f4169026b0001005f02dc000102dc026f08
00001f008002db0001002002d90001003002d9004002d90002006002d900
7002d90002008002d9009002d9000200a002d900b002d9000200c002d900
01002002d9008002d90002001002d9004002d90002009002d900d002d900
e002d90003001002d9009002d9000202d9026c0800001f002002d8003002
d8004002d8000302d802a80800001f001002d7002002d70002002002d700
3002d7004002d7005002d7000402d7029a0800001f00a802d600b802d600
d802d6000302d6026b0400001f02d5b2340f1f41fd02d502560400001f02
cc02cc02cb02cb02ca02ca02c902c902c802c8000f02c8000f02ca000200
6002c900c002c900ff02c90003003f02c8006002c8007002c8009002c800
c002c80005005f02ca000100a002cc0001002f02cc004002cc006002cc00
03003f02ca008f02ca00bf02ca0003002f02c8002f02ca003f02c9000300
5f02c90001007f027c007a02b10002007f0278007f0279007f027a007f02
7b0004007f0274007f0275007f0276007f02770004007f0270007f027100
7f0272007f02730004007f026c007f026d007f026e007f026f0004007f02
68007f0269007f026a007f026b0004006f027c006502b10002006f027800
6f0279006f027a006f027b0004006f0274006f0275006f0276006f027700
04006f0270006f0271006f0272006f02730004006f026c006f026d006f02
6e006f026f0004006f0268006f0269006f026a006f026b0004004a027c00
01004a0278004a0279004a027a004a027b0004004a0274004a0275004a02
76004a02770004004a0270004a0271004a0272004a02730004004a026c00
4a026d004a026e004a026f0004004a0268004a0269004a026a004a026b00
04003a027c0001003a0278003a0279003a027a003a027b0004003a027400
3a0275003a0276003a02770004003a0270003a0271003a0272003a027300
04003a026c003a026d003a026e003a026fb1043a41ff0268003a0269003a
026a003a026b0004002f027c0001002f0278002f0279002f027a002f027b
0004002f0274002f0275002f0276002f02770004002f0270002f0271002f
0272002f02730004002f026c002f026d002f026e002f026f0004002f0268
002f0269002f026a002f026b000400df027c000100df027800df027900df
027a00df027b000400df027400df027500df027600df0277000400df0270
00df027100df027200df0273000400df026c00df026d00df026e00df026f
000400df026800df026900df026a00df026b0004007f0267007a02ab007a
02ae0003007f0263007f0264007f0265007f02660004007f025f007f0260
007f0261007f02620004007f025b007f025c007f025d007f025e0004007f
0257007f0258007f0259007f025a0004007f0253007f0254007f0255007f
02560004006f0267006a02ab006502ae0003006f0263006f0264006f0265
006f02660004006f025f006f0260006f0261006f02620004006f025b006f
025c006f025d006f025e0004006f0257006f0258006f0259006f025a0004
006f0253006f0254006f0255006f02560004005f0267005f02a9005a02ab
0003005f0263005f0264005f0265005f02660004005f025f005f0260005f
0261005f02620004005f025b005f025c005f025d005f025e0004005f0257
005f0258005f0259005f025a0004005f0253005f025441ff005f0255005f
02560004004f0267004f02a9004a02ab0003004f0263004f0264004f0265
004f02660004004f025f004f0260004f0261004f02620004004f025b004f
025c004f025d004f025e0004004f0257004f0258004f0259004f025a0004
004f0253004f0254004f0255004f02560004003f0267003a02ab0002003f
0263003f0264003f0265003f02660004003f025f003f0260003f0261003f
02620004003f025b003f025c003f025d003f025e0004003f0257003f0258
003f0259003f025a0004003f0253003f0254003f0255003f02560004002f
0267002a02ab0002002f0263002f0264002f0265002f02660004002f025f
002f0260002f0261002f02620004002f025b002f025c002f025d002f025e
0004002f0257002f0258002f0259002f025a0004002f0253002f0254002f
0255002f0256000400df026700da02ab000200df026300df026400df0265
00df0266000400df025f00df026000df026100df0262000400df025b00df
025c00df025d00df025e000400df025700df025800df025900df025a0004
00df025300df025400df025500df02560004027c01a6027b011a027a00fb
027900fa027800a1027700a00276009f0275006402740057027300470272
00430271003c02700030026f002d026e002c026d0027026c0025026b0022
026a0021026900200268001e026701a60266011a026500fb4123026400fa
026300a1026200a00261009f02600064025f0057025e0047025d0043025c
003c025b0030025a002d0259002c02580027025700250256002202550021
02540020025340191e96f8641f89f8641f72f8641f71f8641f31f8641f2e
f8641fb8011a403521641ffb21641fa021641f4721641f3c21641f302164
1f2721641f2521641f2221641f2021641f1e21641f001616000000121108
404117023d020c0050000d01bd0050000d018f0050000d018e0050000d01
770050000d014c0050000d01470050000d013a4017500dbd500d8a500d6f
500d5f500d59500d46500d3a500dbb01fe007e000d01e7401d7e0d957e0d
867e0d5c7e0d4a7e0d427e0d417e0d397e0d367e0d2f7e0d412001ec013c
000d01a2013c000d0196013c000d0191013c000d00fb013c000d00f8013c
000d00e0013c000d005e013c000d003c013c000d0020013c000d001e013c
b20d0009b801f5b2213d1fb801f4b2214f1fb801edb221621fb801a9b221
341fbc01a600210401001f01a4b2215e1fb801a3b221521fb80167b22135
1fb80166b221311fb80142b221431fb80141b421301ffa21b80401400f1f
e121721fd2214a1fb021391fa121b80401b21f9f21b80401400b1f72212b
1f65212a1f6421b80401b21f5721b80401b21f4321b80401b61f3d21ab1f
2d21b80401b21f2c21b80401b61f551309130990b801b940330790c70790
6007903007902b07902a07902607902407901f07901d071408120810080e
080c080a080808060804080208000814b8ffe0402c000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a0060ba023d0070023db10237b013034b024b5342014bb0c063004b
6220b0f65323b8010a515ab005234201b0124b004b54422b73184bb01953
4bb053515a58b8023db080444b20202020b0195258b8023db0c04459b026
5258b8023db801004459b0325258b8023db801404459b03a5258b8023db8
01804459b0475258b8023db801c0445959b0372b4bb807ff52b0382b4bb0
09505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0
124358b90001011f858d1bb9000101ff858d59590016763f183f123e1139
46443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2bb0372b4b5079400c1f
ae071f45071f33071f23072b2b2b2b4b5379400c90ae0790450790330790
23072b2b2b2b181db0964b5358b0ff1d59b0324b5358b0ff1d594bb80401
53205c58b9023f023d4544b9023e023d45445958b919a0023f455258b902
3f19a04459594bb8040153205c58b90025023f4544b90021023f45445958
b919a00025455258b9002519a04459594bb8040153205c58b90022023e45
44b90027023e45445958b919a00022455258b9002219a04459594bb80401
53205c58b147214544b1212145445958b919a00047455258b9004719a044
59594bb8040153205c58b1a0214544b1212145445958b919a000a0455258
b900a019a04459594bb8030153205c58b121214544b1212145445958b913
380021455258b9002113384459594bb8030153205c58b121214544b12221
45445958b913380021455258b9002113384459594bb8030153205c58b121
214544b1272145445958b913380021455258b9002113384459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
01b9005201dfb13b76456523456023456560234560b08b766818b0806220
20b9003b01df4565234520b003266062636820b003266165b801df236544
b03b234420b152764565234520b003266062636820b003266165b0762365
44b0522344b10076455458b176406544b25240524523614459b34f673f6c
456523456023456560234560b089766818b080622020b13f674565234520
b003266062636820b003266165b067236544b03f234420b14f6c45652345
20b003266062636820b003266165b06c236544b04f2344b1006c455458b1
6c406544b24f404f452361445945695342014b5058b108004259435c58b1
08004259b3020b0a124358601b2159421610703eb0124358b93b21187e1b
ba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400
0400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8040000
0b2b59b0102342b011234200b0372b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b45444544454445444544454445444544454445444544454445444544
454445444544454445444544454445444544454445444544454445444544
454445444544454445444544454445444544454445444544454474747474
747473737373737373737373737373737373737373737373737373737373
737373737373737374747474747473737373737373737373737373737373
737373737373737373737373737300747373737373737374184569444569
444569444569444569442b2bb0372b2b742b73742b732b75747474737373
737373742b7373747400737474747373737374732b00435c58400c602760
2c604703601e60210273735900435c58bd000f02c90001000f02c8000173
73590174002b2b012b2b2b2b2b2b2b74732b2b2b2b2b2b2b2b7373732b2b
2b2b2b2b0073737473002b2b2b73747473012b2b7374747373737300435c
58ba0000037e00017359017374752b007374752b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b7374752b2b113f00>
[7475 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N18/MFPACC+CourierNewPS-BoldMT 1 TZ
367.380005 583.130493 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 412 68 <00020059ffde049803a700290037013d40352a0501302e01053616362336
3f2a3f2b3f2c3d2d6d0e7c0e09052015209708c306c920d406e406f63608
0000292827262524232221ba029a029b029c40141e491113302a37220001
862901292a37340c120ab8ffc0402f1e2034100a500a02400a800a020a21
5f2c014f2c012c2c2914402d323414651210211e07290a8034013421040b
0d00b80257b4215f220122b8ffc04009120b3f221a39178730b802554012
0740170e3f1f0720073007030719383fb6182b4e10f45d2b4dfded4e10f6
2b5d3c4dfd3c003fed713f3fed435c58400f10402d5a3f10400f1e3f1040
0f143f2b2b2b59ed2b12392f7172ed71722b435c58b9000affc0b32d5a3f
0ab8ffc0b30f1e3f0ab8ffc0b3101b3f0ab8ffc0b310153f0ab8ffc0b20f
143f2b2b2b2b2b5939123939113910ec01111239391239392b3130005d71
01715d213506062322263534243332173534262322070623222635343636
373636333216151133321615140623032623220706151417163332363703
1f4dba4ca5ce0107e85d7a4f6f5b91361e29391424394c9e40bfd3234a3f
3f4af07b687d5a381b32574abb49302929af6a81dd14312e3a240d3b2e1a
2617101519a58ffe5a392e2d39016f183d27281d12213a32>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 6144 89 <00010000000004d5038c002201acb60f100013021200b8ffc040140b0e34
d000011240090108090a0b0c0d0e0f1011bd029a029b029c001e0049ffc0
400c09011a1b1c1d1e1f21222200ba02d7029b029c400f1e494009010908
0706050402010100bd02d7029b029c001e0049ffc0400c09011b1a191817
1615141312ba029a029b029cb41e49010000b80257400b11101411002211
10220000b802574012121314120001121300121b1a1a0909080600b801a9
b41212110a01b801a9b6405010f0100210b80207400a201187f012011287
0022b801a9b4405f130113b802074010205000010400140050008000b000
0500b802a0b3237f8f182b1910f45d711afd5d1a18ed10ed5ded1a19fd5d
1a18ed003f3c10ed3f3c103c103c123987082e2b057d10c487082e182b05
7d10c4182b2b2b2bb10602435458b90000ffc0b20b1034002b5931300143
5c58b501400f1e3f22b8ffc0400e0f1e3f0140141b3f0140172d3f22b8ff
c0400e172d3f1018140c3f0118140c3f11b8ffdeb70f093f12220f093f2b
2b2b2b2b2b2b2b2b5900712b435c58b500800f093f00b8ffc0b3172d3f00
b8ffc0b314283f00b8ffc0b2141b3f2b2b2b2b59015d2513222726353436
3321321615140623230123012322263534363321321615140706230268dd
5217323f4a01194a3f3f4a22fea9d6fea91d4a3f3f4a0113493f301853f9
01c60e1f3a2d39392e2d39fd4102bf392e2d39392e391e0f>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 886 72 <00020042ffdf046a03a7001d0024019b400ab812b814b71bc71b040db8ff
e040491c1e3464026c14c706d706d814d819e706e814e819f302f506f312
fc14f81ff9230f360647060212691469186a1a6a1f662394029f1f9023ac
1fa423fa190b1d0705030b13241e0108b8ffc0b32a3a3408b8ffc0400c19
22348008d00802f0080108b80116b5121e401d351eb8ffc0400f1d203410
1e01401e801e028f1e011eb801184035004012233f0040213500401c351f
00010f004f00cf0003ff000100400c0f3400000421400f1e3f21400f143f
212116070421100b1eb80260b200770bb8ff80b323463f0bb8ff80b34b26
3f0bb8ffc0400c232434e00b010b1a26247701b802604014134023351f13
70130213400d0f34131925496c182b4e10f42b5d2b4dfde44e10f65d2b2b
2b4df4ed003fed3ffd2b2b11392f2b5d71722b2b2bed5d71722b2b435c58
b51e4019213f1eb8ffc0b314283f1eb8ffc0b312233f1eb8ffc0b323123f
1eb8ffc0b228143f2b2b2b2b2b59ee5d712b2b3c103c0111121739313001
5d435c58b90002ffd4400911173f1f2c11173f23b8ffd4b211173f2b2b2b
5900715d012b5d0121161633323736333216151407060423220035340033
32161716171615272626232206070469fcb720a38b72bd4e1e29381e28fe
ca8ff6fed9013fd07dd133482f20e32f9869689830015e506231143a2c28
1c25430116cbd8010f58334a6d4c647658575758>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 5350 85 <0001006c0000049503a700290178b72001019806011201b8ffc040251a35
0a104a1002af10af11021f40040e4009400a400b400c400d05191a1b1c1d
1e1f202122410c029a029b029c001e0049ffc0000bffc0000cffc0000dff
c0400c16041a191817161514131211ba029a029b029c400d1e4900002928
27262524232221ba029a029b029c40191e490c0d081211202d2f34114041
47341140212534110e1a01b8ffc0b330323401b8ffc0b31e263401b8ffc0
b614193401290e0bb8011d40210e21040729061a190a0008200830085008
6008700806900801081a2b0100001112b802574011220021202130215021
602170210621192ab80101b17c182b4e10f45d3c4dfd3c3c103c4e10e672
5d003f3c3f3f4deded1112392b2b2b1112392b2b2b01111239392b2b2bb1
0602435458b90001ffc0b20b1334002b5931300049547940120f10020310
020e23050f031123001011020101103c103c2b002b8181005d712b435c58
40141040190f3f1140190f3f1040140c3f1140140c3f2b2b2b2b59005d71
011536363332171615140623222623220607112132161514062321222635
343633331123222635343633023c819541645e403d2b2654212bab800124
4a3f3f4afd954a3f3f4a7a4a4a3f3f4a038c805d3e4a32342c3d4c6c6cfe
cb392e2d39392e2d3901f2392e2d3900>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 1416 74 <00020042fe5404c103aa00250031018d40390e27023102070c170c211231
124212b81fb821c81fc821f927f9310b101b1f25201b2f25960cf41ffb21
fa27fb2bf42df5310b2740090f3f31b8ffc04009090f3f27800a0b3431b8
ff80400d0a0b34184023291b402f1d2308b8ffc0400c1d01010203040506
0708090aba029a029b029c40211e491417261214161a2f1d162c0f292123
07007a0201062f211d0b0f0e26770119b80257b20a0001b8025740230a9f
09af09bf09cf09047009c009e009031f092f094f0903091a335012601202
12c62cb8025540141f204f205f206f20702005bf20012019324967182b4e
10f4715d4dfde65d4e10f6715d5d3c4dfd3c10fd3ce4003f3fed3f3ce43f
ed10ed111239123901111239392bb10602435458b51a400b103400b8ffc0
b20b1034002b2b593130437940182a2e1e222a222c1f002e1e2c1f002b21
291f012d1f2f1f00002b2b012b2b818100495479401030311b1c311b2f23
04301c2623011b1a01103c2b002b818100495479400e2428272529230528
24262301250001103c2b002b81002b2b2b2b5d015d007101353332161514
062323111406062323222635343633333236353506062322003534003332
161334262322061514163332360348f04a3f3f4a235bbc76e84a3f3f4ae2
5e68448d4ad1fee6011ad14e8d3fa77575a7a77575a7034f3d392e2d39fd
166ca174392d2e39664e642c2c0117cdce01172dfe4971a6a67172a5a500
>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 0 0 <0002010000000500050000030007003b401e0607f00201000504f003000a
0605f00303021a090704f0010019084b7b182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c3130211121112521112101000400fc2003
c0fc400500fb002004c0>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/a 68 def
/v 89 def
/e 72 def
/r 85 def
/g 74 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 97 /a put
dup 118 /v put
dup 101 /e put
dup 114 /r put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 19.979996 -19.979996 0.0 0.0 0.0] Tf
(average)
[11.99811 11.99811 11.99811 11.99811 11.99811 11.99811 11.99811 ] pdfys
368.099274 266.871094 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 5846 87 <00010094ffdf04ba04ce002c00acb2190821b801b2401f25160021262525
1d0609f50521110b7019011919142d292901700ce00c020cb8ffc040093a
350c1a2e25240001b8025740261d1e15001420143014501460147014b014
c014e014f0140a101420146014701480140514192dba0101013500182b4e
10f4715d3c3c3c4dfd3c3c3c4e10ee2b5d11392f1112392f5d003f4dfde4
3f3c103cfd3c10e43130437940101213020403260412011d000213051d00
2b012b2b8181011114171633323736333216151407060423222635112322
26353436333335343633321615152132161514062302341b2a6c9d85331d
283b2031fedf63bfbf4a4a3f3f4a4a392e2d39017b4a3f3f4a02bffe6542
1521431a3c2b281d2f4fa57801c3392e2d39b94a3f3f4ab9392e2d39>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 1956 75 <0001001a000004ac0511003800ec4019df0901060616062706034009400a
0210111213141517181819ba02d7029b029c400d1e490028292a2b2c2d2f
303031bd029a029b029c001e0049ffc0400c160111100f0e0d0c0a090908
ba029a029b029c400d1e490029282726252422212120ba02d7029b029c40
0d1e490000383736353433323130ba029a029b029cb41e49380020b801a9
400f01f51d2104072928281111100a1918b802574010084f09017009af09
e00903091a3a0021b80257400e30308031011f31013119394f67182b4e10
f45d713c4d10fd3c4e10f65d713c4dfd3c003f3c103c103c3fedf4ed3f2b
2b2b2b2b3130005d015d0111363633321616151132171615140623232226
353437361711342726232206071132171615140623232226353437361711
2322263534363301934083436aa66d4e18303e4aea493f30194d242f5c44
69594f17313f4ae94a3f31184e234a3f3f4a0511fe4b2625489b76fe7f0f
1f392d39392e381f100101734f202b3558fe800f1f392d39392e381f1001
0377392e2d39>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 100 16 <000100bc01e8041402a30003001a400c022d00001a050119048099182b4e
10e410e6002f4ded3130012135210414fca8035801e8bb00>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 2636 80 <0001ffde0000050103a8004203614016df0f01a606ab1dab2cbb1db91ebb
2ccd1dcb2c081207b8ffc0b31a233401b8ffc04021152334126f1f6f2e7f
1f7f2e8f1f8f2e9f1f9f2edf1fdf2e0a3108df38df3f023fb8ffc0b3090e
3438b8ffc04013090e341240090e34003435363738393a3b3b3cbd029f02
9b029c001e0049ffc0400c1601161514131211100f0f0e410e029f029b02
9c001e0049ffc00016ffc00011ffc00012ffc00010ffc0400c0f05262524
232221201f1f1e410e029f029b029c001e0049ffc00016ffc0000fffc000
10ffc00011ffc0400c12053534333231302f2e2e2dba029f029b029c400d
1e4900004241403f3e3d3c3c3bba029f029b029cb21e490fb9029f029a40
1c1e2d2a350107421a210a2a2104770a0742063534342525150a0d0e0fb8
0257b5171640323516b8ffc0401b263516401e3a34cf16df16ef16ff1604
6016701680169016041216b801f040111e201f301f021f40140c3f1f4012
0b3f1fb80257b627122640323526b8ffc04024263526401e3a34cf26df26
ef26ff26046026702680269026042640140c3f2640120b3f26b801f0b200
2d2eb80257b23c103bb8ffc0401826359f3b010f3ba03bdf3be03bf03b05
cf3bdf3be03b033bb8ffc0402c5a2d3f3b403d3f343b404142343b804347
343b40484b343b804c53343b405054343b405b5d343b19433f6c182b4e10
f42b2b2b2b2b2b2b2b72715d2b4b5258b36f3b013bb902fe004310f45d59
3c4dfd3c3cf62b2b5d5d2b2b2b435c58b52640160d3f26b8ffc0b3161d3f
26b8ffc0400d5a2d3f2640190f3f2640170e3f2b2b2b2b2b593cfd2b2b5d
3cf6435c58b51640160d3f16b8ffc04017161d3f1640190f3f1640170e3f
1640140c3f1640120b3f2b2b2b2b2b2b595d5d2b2b2b3cfd3c3c003f3c10
3c103c3f3ff4ed10ed1139391112393945444b5258b9029f029f45b02861
44592b2b2b2b2b012b2b2b5db10602435458b90007ffc0b30b1b3401b8ff
c0b20b1b34002b2b59313043794020181d080d1c250c251b091e1d001d1e
0807190b171d011d081a1d03180d1a1d01002b2b012b103c103c2b2b2b81
81015d435c58b9003fffc040180d163f22800d163f31800d163f22400f12
3e31400f123e3fb8ffc0b20f123e2b2b2b2b2b2b59002b2b435c58b90007
ffc0b30d163f01b8ffc0b30d163f07b8ffdeb3141b3f01b8ffc0b2141b3f
2b2b2b2b590071015d011536363332161736363332171615113216151406
232311342623220706071132161514062323113426232206071132161514
06232322263534363311222635343633012a3251352d582a356d3972475e
403e3e4ac32223221d2535403e3e4ac32323244631403f3f4ab94a3f3e41
413e3f4a038c3a31252c2c2c2b3d5082fe353a2d2d3902872f24121945fe
633a2d2d3902872e252d43fe633a2d2d39392e2d3901f23a2d2d3900>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 2352 76 <000200800000044b05110003001c00c3b90001ffc0b30b0d3e02b8ffc040
150b0d3e500901400d400e020c0d0e0f101112131415bf029a029b029c00
1e0049ffc0000dffc0400c16020d0c0b0a090807060504ba029a029b029c
400d1e4900041c1b1a191817161514ba029a029b029c400a1e492f023f02
4f020302ba02570003ffc0400d0e393f030103001c060d0c0a05bb025700
1400020257b2017804b80257400f15152014301460140314191d5aa4182b
4e10f45d3c4d10fdf4ed10ed003f3c3f3f712bed5d2b2b2b3130015d002b
2b0115233501113332161514062321222635343633331123222635343633
02b0f40110f64a3f3f4afd474a3f3f4af6a549403f4a0511d9d9fe7bfd41
392e2d39392e2d3901f2392e2d39>MFPACC+CourierNewPS-BoldMT AddT42Char 
1 3684 81 <000100330000049803a700350115401b06061606971d03df09df1f024009
400a020f101112131415161617ba02d7029b029c400d1e4900262728292a
2b2d2e2e2fbd029a029b029c001e0049ffc0400c1601100f0e0d0c0b0a09
0908bd029a029b029c001e0049ffc0400c1601272625242322201f1f1eba
02d7029b029c400d1e4900003534333231302f2f2eba029a029b029cb21e
491eb801a9401101f51b210407350627262610100f0a1716b80257b50809
401d3509b8ffc0401219357009af09e009030f0901091a371e001fb80257
400e2e2e802f011f2f012f19364f67182b4e10f45d713c4d10fd3c3c4e10
f6715d2b2b3c4dfd3c003f3c103c103c3f3fedf4ed2b2b2b2b2bb1060243
5458b90001ffc0b20b1b34002b59313001015d005d011536363332171615
113216151406232322263534363311342726232206071132171615140623
232226353437363311222635343633019738874fb66a54413e3f4ab94a3f
3e41242f5e476b524f17313f4ae94a3f30184f413e3f4a038c453030715a
92fe83392e2d39392e2d390183431f283759fe830f1e3a2d39392e381f0f
01f23a2d2d39>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/t 87 def
/h 75 def
/hyphen 16 def
/m 80 def
/i 76 def
/n 81 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 116 /t put
dup 104 /h put
dup 45 /hyphen put
dup 109 /m put
dup 105 /i put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(th-min)
[11.99811 11.99811 11.99811 11.99811 11.99811 11.99811 ] pdfys
367.018341 399.4104 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 6678 91 <0001002b000004a7038c00390274b90011ffe8401143350f203f3503181e
26341b181e263437b8ffe8b31e263421b8ffe840371e2634162cc22cdf0f
d52c04481b462cd505d50ad90cd912d514d519da28da30fa0f0b4b0f5a0f
8b0fcb0fc52c051f503f351d403f3501b8ffc0b23f3539b8ffb040393f35
390852350700081e3701690e780e05681f981f021501191d191fd301da0e
de1dde1fd33908cf0b014f0b5f0b8f0baf0bbf0b050b0b0e2fb8ffc0403e
1517342f2f2d001301401350138013a013b0130513131029401517342929
002b0139102c2b012d1d0f1f0e10391e1d2d1f0e010e1f1f805564345d1f
011fb8026c40122b01142b2b01392d1d1d80556434521d011db8026c40ac
103914101039010e101d1e08170a392db92bb91f1e322506ca0ec510c62b
c92dfc0ef410f42bfb2d08922b9d2da90ea710bc0eb310b42bbb2dcc0ec3
10c42bcb2d0c112b1e2d212b2e2d332b3c2d432b4c2d8b0e8410862b8a2d
0c560e5a10562b5a2d660e6a10662b6a2d990e97100a170e1810142b1b2d
4a0e4610062d084b352d30473510083a351008433510204b35392d1d1004
1a362b324b351f2b010e0404220f3601ff3601363604b8ffc040124b3504
402226344f04011004b004c0040304b8ffc0b310123404b8ffc04009171b
3404043b22221ab8ffc0400e50358f1a9f1aaf1abf1acf1a051a2f5d2b33
2f11332f2b2b5d712b2b332f5d71111217392b111217392b2b2b2b2b7272
71715d003f3cfde5e53c3f3cfd3c3c3c87052e2b5d2b877dc4872e182b5d
2b877dc40f0f0f0f0133182f2b11332f5d7111332f2b11332f5d71b10602
435458b50f200910342cb8ffe0b2091034002b2b59313001725d712b2b2b
2b2b005d71722b2b2b2b2b2b010116161514062323222635343637270716
161514062323222635343637012526263534363333321615140717372635
343633333216151406070300013738383f4ae94a3f2d27999c2f293e4ae7
4a3f38380130fef335373f4ac04a3f387c7a373f4abe4a3f373601d8fef5
03392b2d39392f24370a84840c32272f39392e2a3903010ce604392a2d39
392c3b25676927333039392e29390400>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/x 91 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(th-max)
[11.99811 11.99811 11.99811 11.99811 11.99811 11.99811 ] pdfys
319.138275 169.250793 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 4110 83 <0002ffeffe54049503a70026003401d8402ffd1ff422fd29fd2df430f434
06061b0a2602b621c621d829d72de829e62d061f1b10262f1b202604122d
800a0b3430b8ff8040180a0b341e401d2b1b4032242c080008090a0b0c0d
0e0f1011bf029a029b029c001e0049ffc00009ffc0400c0a020908070605
0403020100ba029a029b029c400d1e490019181716151413121110ba029a
029b029c401a1e4919180086242b211d1af519781d0718063221240a0908
0e27b80255402330204020502003002010202020e02004b02001201a361b
7a1a1a19190026f2302f2e01b80257401911001020103010cf10df10ef10
ff10079f1001101935637c182b4e10f4715d3c4dfd3c3c3ce63c3c103c10
e44e10f6715d5d4ded003f3c3fed3f3ff4e410ed10ec103c2b2b2bb10602
435458b500400b10341ab8ffc0b20b1034002b2b5931304379401e333428
2a1e23292622262a1e271f013323271f01281f2b1f013421321f00002b2b
012b2b2b2b81818100495479401030312526302632230431252f23002600
01103c2b002b81810049547940122c2e1b1c2d252e1b2b23052c1c2f2300
1b1a01103c2b002b2b8181002b2b435c58b90030ffc0b30a113f30b8ffc0
4017090f3f2d400a113f2e400a113f2d40090f3f2e40090f3f2b2b2b2b2b
2b595d015d00715d25113332161514062321222635343633331123222635
343633331536363332001514070623222601342626232207061514163332
3601687b4a3f3f4afe954a3f404923234a3f3f4af0489a51d20128af92b7
4f9a0214448d5f995a3daf8182ae71feb0392e2d39392d2e39039e392e2d
39463130fee3b8cb846e2e018e2b8559734f49529b9a>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/p 83 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(max-p)
[11.99811 11.99811 11.99811 11.99811 11.99811 ] pdfys
224.63887 217.610382 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 154 20 <000100a900000427052f001a00afb9001affc0401019213f171a661a771a
03151a251a021ab8fff0b2161934b8ffc0400c160108090a0b0c0d0e0f10
11ba029a029b029c400d1e490009080706050403020100ba029a029b029c
40151e49117f140114404735144022253414402f323414b8016db5000509
080c17be024b00100000026200110001026240091150109010a0100310bc
024a001b009301d900182b10f65d3ced10ed10e4003f3c3fed2b2b2b5d39
2b2b3130002b715d2b011133321615140623212226353436333311070623
22263534363702cfcf4a3f3f4afd954a3f3f4acfb72c1627392a43052ffb
9e392e2d39392e2d390357300c3e2d292f12>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/one 20 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(1) show
170.39917 252.409546 m
%ADOBeginSubsetFont: MFPACC+CourierNewPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MFPACC+CourierNewPS-BoldMT gcheck setglobal} if
1 4732 84 <00020048fe5404ee03a70026003401d34035d819f416fd19fd29fd2df330
f334070b12061d02a719b917c917d929d62dee29e62de6310810121f1d20
122f1d041229800a0b3434b8ff8040110a0b341e401b2b1b403214290840
09400ab8ffc0400c160308090a0b0c0d0e0f1011ba029a029b029c400d1e
49001f202122232425260001ba029a029b029c400d1e4900090807060504
03020100ba029a029b029c40201e491132142b211b071ef5201f06322114
0a10016409080e12f2101e1f1f2710b80257400c006f01e001027001c001
0201b8ffc0b53135011a362fba02550018ffc0401c31351f184f185f186f
187018df18ef18ff1808bf1801181935498f182b4e10f4715d2b4ded4e10
f62b5d5d3c4dfd3c3c103c10e6003f3cfd3c3fed3f3ce43fed1112392b2b
2bb10602435458b511400b10341eb8ffc0b20b1034002b2b593130437940
1c2c31151a2d2516252c1a2f1f0031152f1f002e192b1f013017321f0000
2b2b012b2b2b2b8181004954794010333412133412322304331327230112
1101103c2b002b8181004954794012282a1c1d2926281d2b23052a1c2723
011d1e01103c2b002b2b8181002b2b435c58b529400a113f34b8ffc0400e
0a113f2940090f3f2840090f3f34b8ffc0b2090f3f2b2b2b2b2b595d015d
00715d011133321615140623212226353436333311060623222726353400
333216173533321615140623073426262322070615141633323604422449
3f3e4afe954a3f3f4a7a4b9b4fb792af0128d3519948f1493f3e4af1448e
5e9a593daf8182ae02bffc62392e2d39392d2e3901502e2e6e84cbb8011d
303146392e2d39ee2b8559734f49539a9a00>MFPACC+CourierNewPS-BoldMT AddT42Char 
MFPACC+CourierNewPS-BoldMT /CharStrings get begin
/q 84 def
end
MFPACC+CourierNewPS-BoldMT /Encoding get
dup 113 /q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(q) show
/MFPACC+CourierNewPS-BoldMT /Font _pdfUndefineResource
/N18 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
